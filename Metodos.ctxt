#BlueJ class context
comment0.target=Metodos
comment1.params=
comment1.target=Metodos()
comment10.params=array
comment10.target=boolean\ ChecaCheioArrayPessoas(Pessoa[])
comment10.text=M\u00E9todo\ que\ checa\ para\ ver\ se\ a\ Array\ de\ Pessoas\ est\u00E1\ cheia.
comment11.params=
comment11.target=Pessoa[]\ CriaSequenciaPessoas()
comment11.text=\ M\u00E9todo\ que\ cria\ a\ sequ\u00EAncia\ de\ pessoas\ que\ compraram\ as\ Tele\ Senas\ para\ o\ sorteio.\r\nSeleciona\ aleatoriamente\ nomes\ da\ array\ "clientes",\ sem\ repeti-los.
comment12.params=arr
comment12.target=void\ ImprimeNomes(Pessoa[])
comment12.text=M\u00E9todo\ que\ imprime\ todos\ os\ nomes\ das\ pessoas\ em\ uma\ array\ de\ pessoas.
comment13.params=arr\ targetValue
comment13.target=boolean\ ContemPessoa(Pessoa[],\ java.lang.String)
comment13.text=\ M\u00E9todo\ que\ verifica\ se\ uma\ array\ de\ pessoas\ cont\u00E9m\ um\ pessoa\ determinada,\ \r\nretornando\ um\ boolean.
comment14.params=str
comment14.target=int\ CalculaQuantidadeVendida(Pessoa[])
comment14.text=\ M\u00E9todo\ que\ retorna\ a\ quantidade\ total\ de\ bilhetes\ de\ Tele\ Sena\ vendidos\ a\ partir\ da\r\narray\ de\ clientes.
comment15.params=quant
comment15.target=double\ CalculaValorArrecadado(int)
comment15.text=\ M\u00E9todo\ que\ calcula\ o\ valor\ total\ arrecadado\ no\ sorteio,\ recebendo\ a\ quantidade\r\nde\ bilhetes\ vendidos\ e\ retornando\ um\ valor\ do\ tipo\ double.
comment16.params=valor
comment16.target=double\ ValorPremio(double)
comment16.text=M\u00E9todo\ que\ retorna\ o\ valor\ total\ do\ pr\u00EAmio\ (80%\ do\ valor\ arrecadado)
comment17.params=valor
comment17.target=double\ valorLucro(double)
comment17.text=M\u00E9todo\ que\ retorna\ o\ valor\ total\ do\ lucro\ na\ venda\ (20%\ do\ valor\ arrecadado)
comment18.params=arr
comment18.target=int[]\ AumentaArraySorteio(int[])
comment18.text=\ M\u00E9todo\ que\ aumenta\ a\ array\ de\ valores\ sorteados\ em\ 1,\ caso\ n\u00E3o\ haja\ ganhadores.\r\nO\ m\u00E9todo\ retorna\ uma\ nova\ array\ de\ inteiros
comment19.params=array
comment19.target=boolean\ TodosTrue(boolean[])
comment19.text=\ M\u00E9todo\ checa\ se\ todos\ os\ valores\ em\ uma\ array\ de\ booleans\ s\u00E3o\ do\ tipo\ "true",\ \r\n\ \ \ \ retornando\ "true"\ se\ for\ o\ caso\ e\ "false"\ caso\ contr\u00E1rio\ (caso\ haja\ ao\ menos\ um\ false).\r\nO\ m\u00E9todo\ \u00E9\ utilizado\ para\ checar\ se\ h\u00E1\ ganhadores.
comment2.params=
comment2.target=TeleSena[]\ GeraTeleSenasPessoa()
comment2.text=Inicia\ as\ Tele\ Senas\ de\ cada\ uma\ das\ Pessoas,\ com\ no\ m\u00EDnimo\ 1\ TeleSena\ e\ no\ m\u00E1ximo\ 15
comment20.params=arr\ obj
comment20.target=void\ InsereGanhador(Pessoa[],\ Pessoa)
comment20.text=\ M\u00E9todo\ que\ insere\ um\ objeto\ do\ tipo\ "Pessoa"\ em\ uma\ array\ de\ objetos\r\ndo\ mesmo\ tipo.
comment21.params=arr
comment21.target=void\ ImprimeInformacoesGanhadores(Pessoa[])
comment21.text=M\u00E9todo\ para\ imprimir\ informa\u00E7\u00F5es\ dos\ ganhadores.\ N\u00E3o\ foi\ utilizado\ na\ execu\u00E7\u00E3o\ final.
comment22.params=arr
comment22.target=boolean\ ContemGanhador(Pessoa[])
comment22.text=M\u00E9todo\ para\ verificar\ se\ uma\ array\ de\ pessoas\ cont\u00E9m\ algum\ valor\ do\ tipo\ "null".
comment23.params=arr
comment23.target=int\ ContaGanhadores(Pessoa[])
comment23.text=M\u00E9todo\ que\ conta\ o\ n\u00FAmero\ de\ ganhadores,\ retornando\ um\ inteiro.
comment24.params=arr
comment24.target=void\ ImprimeInformacoesTodoMundo(Pessoa[])
comment24.text=\ M\u00E9todo\ que\ imprime\ as\ informa\u00E7\u00F5es\ de\ todos\ os\ clientes,\ ganhadores\ ou\ n\u00E3o.\r\nFoi\ utilizado\ na\ elabora\u00E7\u00E3o\ do\ programa\ para\ fins\ de\ checagem.
comment25.params=arr\ n
comment25.target=java.lang.String[]\ ImprimeNomeGanhadores(Pessoa[],\ int)
comment25.text=M\u00E9todo\ que\ retorna\ os\ nomes\ de\ todos\ os\ ganhadores\ em\ uma\ array\ de\ "Strings".
comment26.params=arr\ n
comment26.target=int[]\ ImprimeNumeroTeleSenasCompradas(Pessoa[],\ int)
comment26.text=\ M\u00E9todo\ que\ retorna\ um\ array\ de\ inteiros\ que\ representa\ o\ n\u00FAmero\ de\ Tele\ Senas\r\ncompradas\ de\ cada\ ganhador,\ na\ ordem\ da\ array\ de\ nomes\ dos\ ganhadores.
comment3.params=
comment3.target=java.lang.String\ SelecionaNome()
comment3.text=Seleciona\ um\ nome\ aleat\u00F3rio\ da\ String[]\ clientes.
comment4.params=arr\ targetValue
comment4.target=boolean\ ContemString(java.lang.String[],\ java.lang.String)
comment4.text=\ M\u00E9todo\ para\ verificar\ (retornando\ um\ boolean)\ se\ uma\ string\ \r\nest\u00E1\ contida\ em\ uma\ array\ de\ strings.
comment5.params=arr\ targetValue
comment5.target=boolean\ ContemInt(int[],\ int)
comment5.text=\ M\u00E9todo\ para\ Verificar\ se\ um\ inteiro\ est\u00E1\ contido\ em\ uma\ array\r\nde\ inteiros,\ retornando\ um\ boolean\ se\ for\ um\ caso.
comment6.params=array
comment6.target=boolean\ ChecaCheioInt(int[])
comment6.text=\ M\u00E9todo\ para\ checar\ se\ uma\ array\ de\ inteiros\ possui\r\n\ \ \ \ espa\u00E7os\ dispon\u00EDveis\ para\ que\ outros\ elementos\ sejam\ acrescentados,\ \r\nretornando\ um\ boolean.
comment7.params=array
comment7.target=boolean\ ChecaCheioString(java.lang.String[])
comment7.text=\ M\u00E9todo\ para\ checar\ se\ uma\ array\ de\ strings\ possui\r\n\ \ \ \ espa\u00E7os\ dispon\u00EDveis\ para\ que\ outros\ elementos\ sejam\ acrescentados,\ \r\nretornando\ um\ boolean.
comment8.params=
comment8.target=int\ GeraQuantidadeTeleSenas()
comment8.text=M\u00E9todo\ para\ gerar\ um\ n\u00FAmero\ aleat\u00F3rio\ de\ 1\ a\ 15.
comment9.params=
comment9.target=int[]\ CriaSequenciaTeleSena()
comment9.text=M\u00E9todo\ que\ cria\ a\ sequ\u00EAncia\ de\ 25\ n\u00FAmeros,\ de\ 1\ a\ 60,\ sem\ repeti\u00E7\u00E3o.
numComments=27
